---
# https://docs.gitlab.com/ee/ci/docker/using_docker_build.html

# build template
.build:
  stage: build
  image: ${CI_REGISTRY}/golang:1.13
  artifacts:
    expire_in: 1 day
    paths:
      - .build
  before_script:
    - make promu

# docker template
.build-docker:
  stage: docker
  image: ${CI_REGISTRY}/docker:latest
  artifacts:
    expire_in: 1 day
    paths:
      - image
  services:
    - name: ${CI_REGISTRY}/docker:dind
      alias: docker
  tags:
     - dind
  variables:
    DOCKER_DRIVER: overlay
  before_script:
    - apk add --no-cache make go

# push template
.push:
  stage: push
  image: ${CI_REGISTRY}/docker:latest
  services:
    - name: ${CI_REGISTRY}/docker:dind
      alias: docker
  tags:
     - dind
  variables:
    DOCKER_DRIVER: overlay
  before_script:
    - docker login -u "$REGISTRY_USERNAME" -p "$REGISTRY_PASSWORD"
    - apk add --no-cache make go git

stages:
  - lint
  - build
  - docker
  - push

# test
dockerlint:
  stage: lint
  image: ${CI_REGISTRY}/vptech/linter:docker
  script:
    - find . -type f -name "Dockerfile" | xargs -I {} dockerlint {}

golang:
  stage: lint
  image: ${CI_REGISTRY}/golang:1.13
  script:
    - make lint

amd64:build:
  extends: .build
  script:
    - GOARCH=amd64 GOOS=linux GO111MODULE=on promu build --prefix .build/linux-amd64

arm64:build:
  extends: .build
  script:
    - GOARCH=arm64 GOOS=linux GO111MODULE=on promu build --prefix .build/linux-arm64

armv7:build:
  extends: .build
  script:
    - GOARCH=arm GOOS=linux GO111MODULE=on promu build --prefix .build/linux-armv7

amd64:docker:
  extends: .build-docker
  script:
    - make docker BUILD_DOCKER_ARCHS=amd64 DOCKER_IMAGE_TAG=${CI_COMMIT_REF_NAME}
    - mkdir image
    - docker save vptech/sentry-exporter-linux-amd64:${CI_COMMIT_REF_NAME} > image/linux-amd64.${CI_COMMIT_REF_NAME}.tar

arm64:docker:
  extends: .build-docker
  script:
    - make docker BUILD_DOCKER_ARCHS=arm64 DOCKER_IMAGE_TAG=${CI_COMMIT_REF_NAME}
    - mkdir image
    - docker save vptech/sentry-exporter-linux-arm64:${CI_COMMIT_REF_NAME} > image/linux-arm64.${CI_COMMIT_REF_NAME}.tar

armv7:docker:
  extends: .build-docker
  script:
    - make docker BUILD_DOCKER_ARCHS=armv7 DOCKER_IMAGE_TAG=${CI_COMMIT_REF_NAME}
    - mkdir image
    - docker save vptech/sentry-exporter-linux-armv7:${CI_COMMIT_REF_NAME} > image/linux-armv7.${CI_COMMIT_REF_NAME}.tar

docker:push:
  extends: .push
  only:
    - master
  before_script:
    - docker login -u "$REGISTRY_USERNAME" -p "$REGISTRY_PASSWORD"
    - apk add --no-cache make go git
    - docker load -i image/linux-amd64.${CI_COMMIT_REF_NAME}.tar
    - docker load -i image/linux-arm64.${CI_COMMIT_REF_NAME}.tar
    - docker load -i image/linux-armv7.${CI_COMMIT_REF_NAME}.tar
  script:
    - make docker-publish DOCKER_IMAGE_TAG=${CI_COMMIT_REF_NAME} DOCKER_REPO=docker.io/vptech
    - make docker-manifest DOCKER_IMAGE_TAG=${CI_COMMIT_REF_NAME} DOCKER_REPO=docker.io/vptech

docker-release:push:
  extends: .push
  only:
    - tags
  before_script:
    - docker login -u "$REGISTRY_USERNAME" -p "$REGISTRY_PASSWORD"
    - apk add --no-cache make go git
    - docker load -i image/linux-amd64.${CI_COMMIT_REF_NAME}.tar
    - docker load -i image/linux-arm64.${CI_COMMIT_REF_NAME}.tar
    - docker load -i image/linux-armv7.${CI_COMMIT_REF_NAME}.tar
  script:
    - make docker-publish DOCKER_IMAGE_TAG=${CI_COMMIT_REF_NAME} DOCKER_REPO=docker.io/vptech
    - make docker-manifest DOCKER_IMAGE_TAG=${CI_COMMIT_REF_NAME} DOCKER_REPO=docker.io/vptech
    - make docker-tag-latest DOCKER_IMAGE_TAG=${CI_COMMIT_REF_NAME} DOCKER_REPO=docker.io/vptech
    - make docker-publish DOCKER_IMAGE_TAG="latest" DOCKER_REPO=docker.io/vptech
    - make docker-manifest DOCKER_IMAGE_TAG="latest" DOCKER_REPO=docker.io/vptech
